.PAG 'RS232 INOUT'
; OUTPUT A FILE OVER USR PORT
;  USING RS232
;
CKO232	STA DFLTO       ;SET DEFAULT OUT ###TEMP CODE###
	LDA M51CDR      ;CHECK FOR 3/X LINE
	LSR A
	BCC CKO100      ;3LINE...NO TURN AROUND
;
;*TURN AROUND LOGIC
;
; CHECK FOR DSR AND RTS
;
	LDA #$02        ;BIT RTS IS ON
	BIT D1ORB
	BPL CKDSRX      ;NO DSR...ERROR
	BNE CKO100      ;RTS...OUTPUTING OR FULL DUPLEX
;
; CHECK FOR ACTIVE INPUT
;  RTS WILL BE LOW IF CURRENTLY INPUTING
;
CKO020	LDA D1IER
	AND #$30        ;LOOK AT IER FOR T2 OR CB1
	BNE CKO020      ;HANG UNTILL INPUT DONE
;
; WAIT FOR CTS TO BE OFF AS SPEC REQS
;
CKO030	BIT D1ORB
	BVS CKO030
;
; TURN ON RTS
;
	LDA D1ORB
	ORA #$02
	STA D1ORB
;
; WAIT FOR CTS TO GO ON
;
CKO040	BIT D1ORB
	BVS CKO100      ;DONE...
	BMI CKO040      ;WE STILL HAVE DSR
;
CKDSRX	JSR DSRERR      ;A DATA SET READY ERROR
;
CKO100	CLC             ;NO ERROR
	RTS
.PAGE 'RS232 INOUT'
; BSO232 - OUTPUT A CHAR RS232
;
; BUFFER HANDLER
;
BSO232	LDY RODBE
	INY
	CPY RODBS       ;CHECK FOR BUFFER FULL
	BEQ BSO232      ;HANG IF SO...(MAY NEED TIMEOUT?)
	STY RODBE       ;INDICATE NEW START
	DEY
	STA (ROBUF)Y    ;STORE DATA
;
; SET UP IF NECESSARY TO OUTPUT
;
BSO100	BIT D1IER       ;CHECK FOR A T1 NMI ENABLE
	BVC BSO110      ;NONE SO SET UP TIMER
	RTS             ;ELSE RETURN
;
; SET UP FOR A FIRST BYTE OUT
;
BSO110	LDA BAUDOF      ;SET UP TIMER1
	STA D1T1L
	LDA BAUDOF+1
	STA D1T1H
;
; SET UP T1 NMI'S
;
	LDA #$C0
	STA D1IER
;
	JMP RSTBGN      ;BEGIN TRANSFER
.PAGE 'RS232 INOUT'
; INPUT A FILE OVER USER PORT
;  USING RS232
;
CKI232	STA DFLTN       ;SET DEFAULT INPUT
;
	LDA M51CDR      ;CHECK FOR 3/X LINE
	LSR A
	BCC CKI100      ;3 LINE...NO HANDSHAKE
;
	AND #$08        ;FULL/HALF CHECK (BYTE SHIFTED ABOVE)
	BEQ CKI100      ;FULL...NO HANDSHAKE
;
;*TURN AROUND LOGIC
;
; CHECK IF DSR AND NOT RTS
;
	LDA #$02        ;BIT RTS IS ON
	BIT D1ORB
	BPL CKDSRX      ;NO DSR...ERROR
	BEQ CKI090      ;RTS LOW...IN CORRECT MODE
;
; WAIT FOR ACTIVE OUTPUT TO BE DONE
;
CKI010	BIT D1IER
	BVS CKI010
;
; TURN OFF RTS
;
	LDA D1ORB
	AND #$FF-02
	STA D1ORB
;
; WAIT FOR DCD TO GO HIGH (IN SPEC)
;
CKI020	LDA D1ORB
	AND #$04
	BEQ CKI020
;
; ENABLE CB1 FOR RS232 INPUT
;
CKI080	LDA #$90
	STA D1IER
CKI090	CLC             ;NO ERROR
	RTS
;
; IF NOT 3 LINE HALF THEN...
;  SEE IF WE NEED TO TURN ON CB1
;
CKI100	LDA D1IER       ;CHECK FOR CB1 OR T2 ACTIVE
	AND #$30
	BEQ CKI080      ;NO NEED TO TURN ON
	CLC             ;NO ERROR
	RTS
.PAGE 'RS232 INOUT'
; BSI232 - INPUT A CHAR RS232
;
; BUFFER HANDLER
;
BSI232	LDY RIDBS       ;GET LAST BYTE ADDRESS
	CPY RIDBE       ;SEE IF BUFFER EMPTY
	BEQ BSI010      ;RETURN A NULL IF NO CHAR
;
	LDA (RIBUF)Y    ;GET LAST CHAR
	INC RIDBS       ;INC TO NEXT POS
;
; RECEIVER ALWAYS RUNS
;
	RTS
BSI010	LDA #$0         ;RETURN A NULL
	RTS
.SKI 4
; RSP232 - PROTECT SERIAL/CASS FROM RS232 NMI'S
;
RSP232	PHA             ;SAVE .A
	LDA D1IER       ;DOES RS232 HAVE ANY ENABLES?
	BEQ RSPOK       ;NO...
RSPOFF	LDA D1IER       ;WAIT UNTILL DONE
	AND #%01100000  ; WITH T1 & T2
	BNE RSPOFF
	LDA #%00010000  ; DISABLE CB1 (NEED TO RENABLE IN USER CODE)
	STA D1IER
RSPOK	PLA             ;ALL DONE
	RTS
.END
; RSR 8/24/80 ORIGINAL CODE OUT
; RSR 8/25/80 ORIGINAL CODE IN
; RSR 9/22/80 REMOVE PARALLEL REFS & FIX XLINE LOGIC
